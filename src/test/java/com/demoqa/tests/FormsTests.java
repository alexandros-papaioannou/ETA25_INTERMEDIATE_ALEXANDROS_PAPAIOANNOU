package com.demoqa.tests;

import com.demoqa.base.BaseTest;
import com.demoqa.pages.FormsPage;
import org.testng.Assert;
import org.testng.annotations.Test;

import java.util.ArrayList;
import java.util.List;

public class FormsTests extends BaseTest {

    @Test
    public void allForms() {
        FormsPage formsPage = new FormsPage(driver);
        Assert.assertTrue(formsPage.isLoginPageBannerDisplayed());
        Assert.assertTrue(formsPage.isFormsButtonDisplayed());
        Assert.assertEquals(formsPage.getTextFromFormsButton(), "Forms");
        formsPage.scrollToFormsButton();
        formsPage.goToMenuItem("Forms");
        Assert.assertEquals(formsPage.getTextFromPracticeFormButton(), "Practice Form");
        formsPage.goToSubMenuItem("Practice Form");
        Assert.assertTrue(formsPage.isFormsHeaderDisplayed());
        Assert.assertEquals(formsPage.getTextFromFormsHeader(), "Practice Form");
        Assert.assertTrue(formsPage.isFormsSubTitleDisplayed());
        Assert.assertEquals(formsPage.getTextFromFormsSubTitle(), "Student Registration Form");
        Assert.assertTrue(formsPage.isUserNameLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromUserNameLabel(), "Name");
        Assert.assertTrue(formsPage.isFirstNameFieldDisplayed());
        formsPage.setFirstNameField("Johnny");
        Assert.assertTrue(formsPage.isLastNameFieldDisplayed());
        formsPage.setLastNameField("Bravo");
        Assert.assertTrue(formsPage.isEmailLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromEmailLabel(), "Email");
        Assert.assertTrue(formsPage.isEmailFieldDisplayed());
        formsPage.scrollToEmailField();
        formsPage.setEmailField("Johnny@Bravo.com");
        Assert.assertTrue(formsPage.isGenderLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromGenderLabel(), "Gender");
        Assert.assertTrue(formsPage.isMaleGenderLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromMaleGenderLabel(), "Male");
        Assert.assertTrue(formsPage.isFemaleGenderLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromFemaleGenderLabel(), "Female");
        Assert.assertTrue(formsPage.isOtherGenderLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromOtherGenderLabel(), "Other");
        formsPage.setGender("Male");
        Assert.assertTrue(formsPage.isMobileLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromMobileLabel(), "Mobile(10 Digits)");
        Assert.assertTrue(formsPage.isMobileFieldDisplayed());
        formsPage.setMobileField("0370123456");
        Assert.assertTrue(formsPage.isDateOfBirthLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromDateOfBirthLabel(), "Date of Birth");
        Assert.assertTrue(formsPage.isDateOfBirthFieldDisplayed());
        formsPage.setDateOfBirth("February", "1987", 25);
        Assert.assertTrue(formsPage.isSubjectsLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromSubjectsLabel(), "Subjects");
        Assert.assertTrue(formsPage.isSubjectsFieldDisplayed());
        List<String> subjects = new ArrayList<>();
        subjects.add("Maths");
        subjects.add("Economics");
        subjects.add("English");
        subjects.add("Computer Science");
        subjects.add("Physics");
        formsPage.setSubjectsField(subjects);
        Assert.assertTrue(formsPage.isHobbiesLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromHobbiesLabel(), "Hobbies");
        Assert.assertTrue(formsPage.isHobbiesSportsLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromHobbiesSportsLabel(), "Sports");
        Assert.assertTrue(formsPage.isHobbiesReadingLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromHobbiesReadingLabel(), "Reading");
        Assert.assertTrue(formsPage.isHobbiesMusicLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromHobbiesMusicLabel(), "Music");
        List<String> hobbiesList = new ArrayList<>();
        hobbiesList.add("Sports");
        hobbiesList.add("Reading");
        hobbiesList.add("Music");
        formsPage.setHobby(hobbiesList);
        Assert.assertTrue(formsPage.isPictureLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromPictureLabel(), "Picture");
        Assert.assertTrue(formsPage.isUploadPictureButtonDisplayed());
        String filePath = "C:\\Users\\palexandros\\IdeaProjects\\ETA25_INTERMEDIATE_ALEXANDROS_PAPAIOANNOU\\src\\main\\java\\resources\\TestUploadImage.jpg";
        formsPage.uploadPicture(filePath);
        String uploadedFilePath = formsPage.getUploadedFilePath();
        Assert.assertTrue(uploadedFilePath.endsWith("TestUploadImage.jpg"), "File upload failed!");
        Assert.assertTrue(formsPage.isCurrentAddressLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromCurrentAddressLabel(), "Current Address");
        Assert.assertTrue(formsPage.isCurrentAddressFieldDisplayed());
        formsPage.setCurrentAddressField("Main Street No. 12, block BG232, floor 18, ap. 138");
        Assert.assertTrue(formsPage.isStateCityLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromStateCityLabel(), "State and City");
        Assert.assertTrue(formsPage.isStateDropDownDisplayed());
        formsPage.setState("Rajasthan");
        Assert.assertTrue(formsPage.isCityDropDownDisplayed());
        formsPage.setCity("Jaiselmer");
        Assert.assertTrue(formsPage.isSubmitButtonDisplayed());
        Assert.assertEquals(formsPage.getTextFromSubmitButton(), "Submit");
        formsPage.clickSubmitButton();
        Assert.assertTrue(formsPage.isModalWindowDisplayed());
        Assert.assertTrue(formsPage.isModalStudentNameLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalStudentName(), "Student Name");
        Assert.assertTrue(formsPage.isModalStudentNameValueDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalStudentNameValue(), "Johnny Bravo");
        Assert.assertTrue(formsPage.isModalStudentEmailLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalStudentEmailLabel(), "Student Email");
        Assert.assertTrue(formsPage.isModalStudentEmailValueDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalStudentEmailValue(), "Johnny@Bravo.com");
        Assert.assertTrue(formsPage.isModalGenderLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalGenderLabel(), "Gender");
        Assert.assertTrue(formsPage.isModalGenderValueDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalGenderValue(), "Male");
        Assert.assertTrue(formsPage.isModalMobileLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalMobileLabel(), "Mobile");
        Assert.assertTrue(formsPage.isModalMobileValueDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalMobileValue(), "0370123456");
        Assert.assertTrue(formsPage.isModalDateOfBirthLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalDateOfBirthLabel(), "Date of Birth");
        Assert.assertTrue(formsPage.isModalDateOfBirthValueDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalDateOfBirthValue(), "25 February,1987");
        Assert.assertTrue(formsPage.isModalSubjectsLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalSubjectsLabel(), "Subjects");
        Assert.assertTrue(formsPage.isModalSubjectsValueDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalSubjectsValue(), "Maths, Economics, English, Computer Science, Physics");
        Assert.assertTrue(formsPage.isModalHobbiesLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalHobbiesLabel(), "Hobbies");
        Assert.assertTrue(formsPage.isModalHobbiesValueDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalHobbiesValue(), "Sports, Reading, Music");
        Assert.assertTrue(formsPage.isModalPictureLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalPictureLabel(), "Picture");
        Assert.assertTrue(formsPage.isModalPictureValueDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalPictureValue(), "TestUploadImage.jpg");
        Assert.assertTrue(formsPage.isModalAddressLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalAddressLabel(), "Address");
        Assert.assertTrue(formsPage.isModalAddressValueDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalAddressValue(), "Main Street No. 12, block BG232, floor 18, ap. 138");
        Assert.assertTrue(formsPage.isModalStateCityLabelDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalStateCityLabel(), "State and City");
        Assert.assertTrue(formsPage.isModalStateCityValueDisplayed());
        Assert.assertEquals(formsPage.getTextFromModalStateCityValue(), "Rajasthan Jaiselmer");
        formsPage.scrollToCloseModalButton();
        Assert.assertEquals(formsPage.getTextFromCloseModalButton(), "Close");
        formsPage.clickCloseModalButton();
    }
}
